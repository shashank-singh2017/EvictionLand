<!DOCTYPE html>
<meta charset="utf-8">

<head>
    <link rel="stylesheet" href="/stylesheets/form.css">
    <link rel="stylesheet" href="/stylesheets/bargraph.css">
</head>

<body>
<div class="header"></div>
<div>
    <form class="signupForm" method="get" action="/rankings/state">
        <select name="selectedState" >
            <%
            var options =  states;
            for ( var i = 0; i < options.length; i++ )
            {
            %>
                <option value="<%=options[ i ].state %>" <%=selected == options[ i ].state?"selected":""%>>
                    <%=options[ i ].state %>
                </option>
            <%
            }
            %>
        </select>

        <button type="submit">Filter</button>
    </form>

</div>

<div id="graphic"></div>
<script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>

<script>
    //set up svg using margin conventions - we'll need plenty of room on the left for labels
    var data ;
    data = <%- JSON.stringify(data)%>;
    var margin = {
        top: 50,
        right: 25,
        bottom: 15,
        left: 60
    };

    var width = 960 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

    var svg = d3.select("#graphic").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var x = d3.scale.linear()
        .range([0, width])
        .domain([0, d3.max(data, function (d) {
            return d.case_numbers;
        })]);

    var y = d3.scale.ordinal()
        .rangeRoundBands([height, 0], .1)
        .domain(data.map(function (d) {
            return d.county;
        }));

    //make y axis to show bar names
    /*var yAxis = d3.svg.axis()
        .scale(y)
        //no tick marks
        .tickSize(0)
        .orient("left").
        text(d.rank);

    var gy = svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)*/

    var bars = svg.selectAll(".bar")
        .data(data)
        .enter()
        .append("g")

    //append rects
    bars.append("rect")
        .attr("class", "bar")
        .attr("y", function (d) {
            return y(d.county);
        })
        .attr("height", y.rangeBand())
        .attr("x", 0)
        .attr("width", function (d) {
            return x(d.case_numbers);
        });

    //add a value label to the right of each bar
    bars.append("text")
        .attr("class", "ranking_name")
        //y position of the label is halfway down the bar
        .attr("y", function (d) {
            return y(d.county) + y.rangeBand() / 2 + 4;
        })
        //x position is 3 pixels to the right of the bar
        .attr("x", function (d) {
            return  5;
        })
        .text(function (d) {
            return d.county+"   "+ d.case_numbers;
        });

    bars.append("text")
        .attr("class", "ranks")
        //y position of the label is halfway down the bar
        .attr("y", function (d) {
            return y(d.county) + y.rangeBand() / 2 + 4;
        })
        //x position is 3 pixels to the right of the bar
        .attr("x", function (d) {
            return  -30;
        })
        .text(function (d) {
            return d.rank;
        });
</script>
</body>